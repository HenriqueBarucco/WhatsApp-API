<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
            crossorigin="anonymous"
        />
        <title>WhatsApp QrCode</title>
        <style>
            div {
                display: flex;
                justify-content: center;
                align-items: center;
            }
        </style>
    </head>
    <body>
        <div class="d-flex justify-content-center">
            <img
                src="https://site.youdelivery.com.br/QRCODEYD.gif"
                width="276px"
                height="276px"
                alt=""
                id="qrcode_box"
            />
        </div>
        <div class="container">
            <div class="row">
                <div class="col-25">
                    <div class="input-group mb-3">
                        <input
                            id="token"
                            type="text"
                            class="form-control"
                            placeholder="Token"
                            aria-label="Token"
                            aria-describedby="Token"
                        />
                        <button
                            id="btn-qr"
                            class="btn btn-primary"
                            type="button"
                            onclick="generateQR()"
                        >
                            Gerar QR
                        </button>
                        <button
                            class="btn btn-primary"
                            type="button"
                            onclick="showInfo()"
                        >
                            Informa√ß√µes
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-center">
            <div class="card" style="width: 18rem">
                <ul
                    class="d-flex justify-content-center list-group list-group-flush"
                    id="info-box"
                ></ul>
            </div>
        </div>
    </body>
    <script>
        async function generateQR() {
            const token = document.getElementById('token').value
            const btnQr = document.getElementById('btn-qr')

            if (token == undefined || token == '') {
                return alert('Insira um Token!')
            }

            btnQr.innerHTML = `
      <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
    `

            const responseInit = await fetch(`/instance/init?key=${token}`)
            let jsonInit = await responseInit.json()
            console.log(jsonInit)

            setTimeout(async () => {
                const responseQrBase64 = await fetch(
                    `/instance/qrbase64?key=${token}`
                )
                let jsonQrCode = await responseQrBase64.json()
                console.log(jsonQrCode)

                qrImg = document.getElementById('qrcode_box')
                qrImg.src = await jsonQrCode.qrcode

                btnQr.innerHTML = `Gerar QR`
            }, 2000)

            setTimeout(() => {
                qrImg = document.getElementById('qrcode_box')
                qrImg.src = 'https://site.youdelivery.com.br/QRCODEYD.gif'
            }, 30000)
        }

        async function showInfo() {
            const token = document.getElementById('token').value
            const infoBox = document.getElementById('info-box')

            if (token == undefined || token == '') {
                return alert('Insira um Token!')
            }

            const responseInfo = await fetch(`/instance/info?key=${token}`)
            console.log(responseInfo)
            let jsonInfo = await responseInfo.json()

            if (responseInfo.status != 200) {
                infoBox.innerHTML = `
      <li class="d-flex justify-content-center list-group-item">‚ö†Ô∏è Inv√°lido</li>
      `

                setTimeout(() => {
                    infoBox.innerHTML = ``
                }, 10000)
                return
            }

            if (!jsonInfo.error) {
                let user

                try {
                    user = {
                        name: await jsonInfo.instance_data.user?.name,
                        phone: await jsonInfo.instance_data.user?.id
                            .split('@')[0]
                            .split(':')[0]
                            .replace(
                                /(\d{2})(\d{2})(\d{1})(\d{4})(\d{4})/,
                                '+$1 ($2) $3 $4-$5'
                            ),
                    }
                } catch (error) {
                    user = {
                        name: '',
                        phone: '',
                    }
                }

                connected = await jsonInfo.instance_data.phone_connected

                infoBox.innerHTML = `
        <li class="d-flex justify-content-center list-group-item">${
            user.name || token
        }</li>
        ${
            user.phone
                ? `<li class="d-flex justify-content-center list-group-item">${user.phone}</li>`
                : ''
        }
        <li class="d-flex justify-content-center list-group-item">${
            connected ? 'üü¢ Conectado' : 'üî¥ Desconectado'
        }</li>
        ${
            connected
                ? `<li class="d-flex justify-content-center list-group-item"><button type="button" class="btn btn-danger" onclick="logout()">Desconectar</button></li>`
                : ''
        }
      `
                setTimeout(() => {
                    infoBox.innerHTML = ``
                }, 15000)
                return
            }
        }

        async function logout() {
            const token = document.getElementById('token').value
            const infoBox = document.getElementById('info-box')

            if (token == undefined || token == '') {
                return alert('Insira um Token!')
            }

            const responseInfo = await fetch(`/instance/logout?key=${token}`, {
                method: 'DELETE',
            })
            console.log(responseInfo)
            let jsonInfo = await responseInfo.json()

            if (responseInfo.status != 200) {
                return (infoBox.innerHTML = `
      <li class="d-flex justify-content-center list-group-item">‚ö†Ô∏è Indispon√≠vel</li>
      `)
            }

            if (!jsonInfo.error) {
                infoBox.innerHTML = `
        <li class="d-flex justify-content-center list-group-item">‚úÖ Deslogado com sucesso!</li>
      `

                setTimeout(() => {
                    infoBox.innerHTML = ``
                }, 10000)
            }
        }
    </script>
</html>
